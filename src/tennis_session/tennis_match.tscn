[gd_scene load_steps=25 format=3 uid="uid://bcwuxgarbilrg"]

[ext_resource type="Script" uid="uid://bap4smopj0g20" path="res://src/tennis_session/tennis_match.gd" id="1_3pywv"]
[ext_resource type="PackedScene" uid="uid://bujaw8qgawaj8" path="res://src/players/humanPlayer.tscn" id="2_i47c8"]
[ext_resource type="PackedScene" uid="uid://fdj1nvw8fcxn" path="res://src/players/AiPlayer.tscn" id="3_wwbby"]
[ext_resource type="Resource" uid="uid://cngw1dhrbgb21" path="res://src/players/resources/alcaraz.tres" id="4_7pj63"]
[ext_resource type="PackedScene" uid="uid://r13b2pnjirfc" path="res://src/television/television-hud.tscn" id="4_upnw7"]
[ext_resource type="PackedScene" uid="uid://d237t32p1sgei" path="res://src/tennis_location/us_open/stadium.tscn" id="6_4vere"]
[ext_resource type="PackedScene" uid="uid://bq11dsxkra3s4" path="res://src/cameras.tscn" id="7_6frth"]
[ext_resource type="PackedScene" uid="uid://c7717agxjy34d" path="res://src/tennis_session/match_manager.tscn" id="8_2s2ac"]
[ext_resource type="PackedScene" uid="uid://cggqb75a8w8r" path="res://addons/debug_menu/debug_menu.tscn" id="10_7cjfu"]
[ext_resource type="PackedScene" uid="uid://b7nclbgkw6veg" path="res://src/hud/match_debug_hud.tscn" id="11_7qdcc"]
[ext_resource type="PackedScene" uid="uid://brw673es8wnx2" path="res://src/trajectory_drawer.tscn" id="11_324nl"]
[ext_resource type="PackedScene" uid="uid://dnkjfx5fk78c1" path="res://src/umpire/umpire.tscn" id="12_ard7f"]
[ext_resource type="PackedScene" uid="uid://bxr6pnwu01hft" path="res://src/menus/pause_menu.tscn" id="13_rcvjq"]
[ext_resource type="PackedScene" uid="uid://ds5ryhspuxtpf" path="res://src/crowd/crowd_block.tscn" id="14_o6v58"]

[sub_resource type="Animation" id="1"]
resource_name = "start"
length = 3.0
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(3),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_wicjn"]
_data = {
&"start": SubResource("1")
}

[sub_resource type="Shader" id="Shader_oe3gx"]
code = "
// NOTE: Shader automatically converted from Godot Engine 4.3.stable's ProceduralSkyMaterial.

shader_type sky;
render_mode use_debanding;

uniform vec4 sky_top_color : source_color = vec4(0.385, 0.454, 0.55, 1.0);
uniform vec4 sky_horizon_color : source_color = vec4(0.646, 0.656, 0.67, 1.0);
uniform float sky_curve : hint_range(0, 1) = 0.15;
uniform float sky_energy = 1.0; // In Lux.
uniform sampler2D sky_cover : filter_linear, source_color, hint_default_black;
uniform vec4 sky_cover_modulate : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform vec4 ground_bottom_color : source_color = vec4(0.2, 0.169, 0.133, 1.0);
uniform vec4 ground_horizon_color : source_color = vec4(0.646, 0.656, 0.67, 1.0);
uniform float ground_curve : hint_range(0, 1) = 0.02;
uniform float ground_energy = 1.0;
uniform float sun_angle_max = 30.0;
uniform float sun_curve : hint_range(0, 1) = 0.15;
uniform float exposure : hint_range(0, 128) = 1.0;

uniform sampler2D cloud_texture;
uniform sampler2D cloud_texture2;
uniform vec2 cloud_direction;
uniform vec2 cloud_direction2;
uniform vec2 cloud_scale;
uniform float cloud_distance;
uniform float cloud_speed;
uniform float cloud_speed2;

void sky() {
	float v_angle = acos(clamp(EYEDIR.y, -1.0, 1.0));
	float c = (1.0 - v_angle / (PI * 0.5));
	vec3 sky = mix(sky_horizon_color.rgb, sky_top_color.rgb, clamp(1.0 - pow(1.0 - c, 1.0 / sky_curve), 0.0, 1.0));
	sky *= sky_energy;

	if (LIGHT0_ENABLED) {
		float sun_angle = acos(dot(LIGHT0_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT0_SIZE) {
			sky = LIGHT0_COLOR * LIGHT0_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT0_SIZE) / (sun_angle_max - LIGHT0_SIZE);
			sky = mix(LIGHT0_COLOR * LIGHT0_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT1_ENABLED) {
		float sun_angle = acos(dot(LIGHT1_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT1_SIZE) {
			sky = LIGHT1_COLOR * LIGHT1_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT1_SIZE) / (sun_angle_max - LIGHT1_SIZE);
			sky = mix(LIGHT1_COLOR * LIGHT1_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT2_ENABLED) {
		float sun_angle = acos(dot(LIGHT2_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT2_SIZE) {
			sky = LIGHT2_COLOR * LIGHT2_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT2_SIZE) / (sun_angle_max - LIGHT2_SIZE);
			sky = mix(LIGHT2_COLOR * LIGHT2_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT3_ENABLED) {
		float sun_angle = acos(dot(LIGHT3_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT3_SIZE) {
			sky = LIGHT3_COLOR * LIGHT3_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT3_SIZE) / (sun_angle_max - LIGHT3_SIZE);
			sky = mix(LIGHT3_COLOR * LIGHT3_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	vec4 sky_cover_texture = texture(sky_cover, SKY_COORDS);
	sky += (sky_cover_texture.rgb * sky_cover_modulate.rgb) * sky_cover_texture.a * sky_cover_modulate.a * sky_energy;

	c = (v_angle - (PI * 0.5)) / (PI * 0.5);
	vec3 ground = mix(ground_horizon_color.rgb, ground_bottom_color.rgb, clamp(1.0 - pow(1.0 - c, 1.0 / ground_curve), 0.0, 1.0));
	ground *= ground_energy;

	vec2 sky_uv = EYEDIR.xz / EYEDIR.y;
	vec3 clouds = texture(cloud_texture, sky_uv * cloud_scale + TIME * cloud_direction * cloud_speed).rgb - texture(cloud_texture2, sky_uv * cloud_scale + TIME * cloud_direction2 * cloud_speed2).rgb;
	//clouds = clouds - smoothstep(0.0, EYEDIR.y, cloud_distance);
	clouds = clamp(clouds, 0.0, 1.0);
	sky += clouds;
	
	COLOR = mix(ground, sky, step(0.0, EYEDIR.y)) * exposure;
}
"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_verti"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_ls07b"]
width = 1024
height = 1024
seamless = true
noise = SubResource("FastNoiseLite_verti")

[sub_resource type="FastNoiseLite" id="FastNoiseLite_jpxow"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_ltmrp"]
width = 1024
height = 1024
seamless = true
noise = SubResource("FastNoiseLite_jpxow")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_t6lxu"]
shader = SubResource("Shader_oe3gx")
shader_parameter/sky_top_color = Color(0.291673, 0.457424, 0.658811, 1)
shader_parameter/sky_horizon_color = Color(0.6463, 0.6558, 0.6708, 1)
shader_parameter/sky_curve = 0.15
shader_parameter/sky_energy = 1.0
shader_parameter/sky_cover_modulate = Color(1, 1, 1, 1)
shader_parameter/ground_bottom_color = Color(0.2, 0.169, 0.133, 1)
shader_parameter/ground_horizon_color = Color(0.646, 0.656, 0.67, 1)
shader_parameter/ground_curve = 0.02
shader_parameter/ground_energy = 1.0
shader_parameter/sun_angle_max = 0.523599
shader_parameter/sun_curve = 0.15
shader_parameter/exposure = 1.0
shader_parameter/cloud_texture = SubResource("NoiseTexture2D_ls07b")
shader_parameter/cloud_texture2 = SubResource("NoiseTexture2D_ltmrp")
shader_parameter/cloud_direction = Vector2(-1, 1)
shader_parameter/cloud_direction2 = Vector2(1, 0)
shader_parameter/cloud_scale = Vector2(0.05, 0.05)
shader_parameter/cloud_distance = 0.0
shader_parameter/cloud_speed = 0.001
shader_parameter/cloud_speed2 = 0.002

[sub_resource type="Sky" id="Sky_l3u5c"]
sky_material = SubResource("ShaderMaterial_t6lxu")

[sub_resource type="Environment" id="Environment_xdr50"]
background_mode = 2
background_energy_multiplier = 1.4
sky = SubResource("Sky_l3u5c")
ambient_light_source = 3
tonemap_mode = 1
tonemap_exposure = 1.15
tonemap_white = 0.6
glow_enabled = true
fog_light_energy = 1.4
fog_density = 0.0
adjustment_brightness = 0.8
adjustment_contrast = 0.95
adjustment_saturation = 1.85

[node name="TennisMatch" type="Node"]
script = ExtResource("1_3pywv")

[node name="Player" parent="." instance=ExtResource("2_i47c8")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 12.3828)
move_speed = 6.0

[node name="Skeleton3D" parent="Player/Model/h/test_04/game-rig" index="0"]
bones/0/position = Vector3(-0.00181092, 0.931196, 0.00403439)
bones/0/rotation = Quaternion(-0.056622, -0.0887903, -0.00504867, 0.994427)
bones/1/rotation = Quaternion(0.167712, 0, 0, 0.985836)
bones/2/position = Vector3(-2.06795e-25, 0.0722904, -8.2832e-09)
bones/2/rotation = Quaternion(-0.137911, 0, 0, 0.990445)
bones/3/position = Vector3(-2.06795e-25, 0.0655323, -2.30357e-09)
bones/3/rotation = Quaternion(-0.00281477, 0, 0, 0.999996)
bones/4/position = Vector3(-2.06795e-25, 0.154112, -1.84935e-08)
bones/4/rotation = Quaternion(0.198776, 0, 0, 0.980045)
bones/5/position = Vector3(0, 0.239009, 2.36034e-08)
bones/5/rotation = Quaternion(0.0212192, 0, 0, 0.999775)
bones/6/rotation = Quaternion(-0.150944, 1.77821e-18, 9.25885e-18, 0.988542)
bones/9/rotation = Quaternion(0.93197, -0.0623171, 0.248928, -0.256092)
bones/14/rotation = Quaternion(0.93197, 0.0623171, -0.248928, -0.256092)
bones/17/rotation = Quaternion(-0.864953, 4.26408e-09, 3.92237e-08, 0.501854)
bones/18/position = Vector3(1.62387e-14, 0.00996152, 1.63673e-07)
bones/18/rotation = Quaternion(-0.119677, 2.88403e-08, -1.87362e-08, 0.992813)
bones/19/position = Vector3(0.0163967, -0.00752327, 0.11466)
bones/19/rotation = Quaternion(-0.236028, 0.628948, 0.710111, 0.210848)
bones/20/position = Vector3(-0.0163967, -0.00752327, 0.11466)
bones/20/rotation = Quaternion(0.236028, 0.628948, 0.710111, -0.210848)
bones/21/position = Vector3(-7.79359e-24, -0.0244299, 0.110742)
bones/22/rotation = Quaternion(0.0482493, 0.678689, 0.731447, -0.0451493)
bones/24/rotation = Quaternion(-0.0244467, 0.607187, -0.522655, 0.597962)
bones/25/rotation = Quaternion(0.229136, 0.016185, 0.236836, 0.944004)
bones/26/rotation = Quaternion(0.300183, 0.00223294, -0.0163157, 0.95374)
bones/27/rotation = Quaternion(0.15796, -0.0125443, 0.154279, 0.975238)
bones/28/rotation = Quaternion(0.516202, -0.517632, 0.128168, 0.670198)
bones/29/rotation = Quaternion(0.157632, 0.00834382, 0.125467, 0.979459)
bones/30/rotation = Quaternion(0.275872, 0.0139161, 0.171683, 0.945635)
bones/31/rotation = Quaternion(0.312319, 0.00393461, 0.12523, 0.941679)
bones/35/rotation = Quaternion(-0.0244467, -0.607187, 0.522655, 0.597962)
bones/36/rotation = Quaternion(0.229136, -0.016185, -0.236836, 0.944004)
bones/37/rotation = Quaternion(0.300183, -0.00223283, 0.0163157, 0.95374)
bones/38/rotation = Quaternion(0.15796, 0.0125442, -0.154279, 0.975238)
bones/39/rotation = Quaternion(0.516202, 0.517632, -0.128168, 0.670198)
bones/40/rotation = Quaternion(0.157632, -0.00834393, -0.125467, 0.979459)
bones/41/rotation = Quaternion(0.275872, -0.013916, -0.171683, 0.945635)
bones/42/rotation = Quaternion(0.312319, -0.00393455, -0.12523, 0.941679)
bones/45/position = Vector3(4.07128e-24, 0.087905, -0.0279831)
bones/49/rotation = Quaternion(-0.786092, -2.93146e-15, -2.30504e-15, 0.618109)
bones/50/position = Vector3(1.07203e-21, 0.0180315, 9.18769e-08)
bones/50/rotation = Quaternion(-0.325179, -2.56466e-16, -7.45827e-16, 0.945653)
bones/54/rotation = Quaternion(0.684877, -0.093981, -0.249509, 0.678128)
bones/57/rotation = Quaternion(0.684877, 0.093981, 0.249509, 0.678128)
bones/58/position = Vector3(3.09703e-08, -0.0286626, 0.118898)
bones/58/rotation = Quaternion(-0.596336, -0.400054, -0.463526, 0.519119)
bones/59/position = Vector3(2.43891e-08, 0.0131357, 5.01512e-08)
bones/59/rotation = Quaternion(-0.114132, -0.0550941, 0.207431, 0.970006)
bones/60/position = Vector3(-3.09703e-08, -0.0286626, 0.118898)
bones/60/rotation = Quaternion(-0.596336, 0.400054, 0.463525, 0.519119)
bones/61/position = Vector3(8.46552e-08, 0.0131356, -7.29739e-08)
bones/61/rotation = Quaternion(-0.114132, 0.0550941, -0.20743, 0.970006)
bones/62/position = Vector3(2.2703e-09, -0.037978, 0.118064)
bones/62/rotation = Quaternion(-0.566759, -0.417673, -0.413501, 0.577365)
bones/63/rotation = Quaternion(0.0250597, 0.00550421, 0.138882, 0.989977)
bones/64/position = Vector3(-2.2703e-09, -0.037978, 0.118064)
bones/64/rotation = Quaternion(-0.566759, 0.417673, 0.413501, 0.577365)
bones/65/rotation = Quaternion(0.0250597, -0.00550421, -0.138882, 0.989977)
bones/66/rotation = Quaternion(-0.17205, 0.791421, 0.524877, 0.26183)
bones/67/rotation = Quaternion(0.00871119, -0.0389792, -0.0890497, 0.995226)
bones/68/rotation = Quaternion(-0.179548, -0.0526499, -0.218928, 0.957633)
bones/69/rotation = Quaternion(-0.250338, 0.0465427, -0.2193, 0.941845)
bones/70/rotation = Quaternion(0.712732, -0.0518361, -0.696173, 0.0683269)
bones/71/position = Vector3(3.40334e-08, 0.0195701, -4.03802e-08)
bones/71/rotation = Quaternion(-0.0584436, -0.0607394, -0.0814584, 0.993106)
bones/72/rotation = Quaternion(0.17205, 0.791421, 0.524877, -0.26183)
bones/73/rotation = Quaternion(0.00871118, 0.0389792, 0.0890497, 0.995226)
bones/74/rotation = Quaternion(-0.179548, 0.0526499, 0.218928, 0.957633)
bones/75/rotation = Quaternion(-0.250338, -0.0465426, 0.2193, 0.941845)
bones/76/rotation = Quaternion(0.712732, 0.0518361, 0.696173, 0.0683269)
bones/77/position = Vector3(3.14157e-08, 0.0195698, -3.28736e-09)
bones/77/rotation = Quaternion(-0.0584436, 0.0607394, 0.0814584, 0.993106)
bones/81/rotation = Quaternion(0.697489, -0.222989, -0.633999, -0.248656)
bones/82/rotation = Quaternion(0.0751851, 0.864997, 0.476577, -0.137845)
bones/83/rotation = Quaternion(0.196873, 0.758392, 0.560138, -0.268939)
bones/85/rotation = Quaternion(0.697489, 0.222989, 0.633999, -0.248656)
bones/86/position = Vector3(0.0248723, -0.0367493, 0.105565)
bones/86/rotation = Quaternion(0.211863, 0.805385, -0.433438, 0.344383)
bones/87/position = Vector3(-5.51334e-08, 0.0389288, -4.75029e-09)
bones/87/rotation = Quaternion(-0.397768, -0.0499543, 0.0543535, 0.914511)
bones/88/position = Vector3(-0.0248723, -0.0367493, 0.105565)
bones/88/rotation = Quaternion(-0.211864, 0.805385, -0.433438, -0.344383)
bones/89/position = Vector3(-3.35113e-08, 0.0389289, 1.22371e-07)
bones/89/rotation = Quaternion(-0.397768, 0.0499544, -0.0543534, 0.914511)
bones/91/position = Vector3(-2.79194e-08, 0.0400507, 5.62055e-08)
bones/91/rotation = Quaternion(0.574809, 0.0442382, -0.173396, 0.798481)
bones/93/position = Vector3(6.83929e-08, 0.0400504, -6.84327e-08)
bones/93/rotation = Quaternion(0.574809, -0.0442382, 0.173396, 0.798481)
bones/94/rotation = Quaternion(0.744643, 0.13389, 0.653642, -0.0182421)
bones/95/rotation = Quaternion(0.846794, 0.139631, 0.510552, -0.0527227)
bones/97/rotation = Quaternion(0.744643, -0.13389, -0.653642, -0.0182421)
bones/98/rotation = Quaternion(0.846794, -0.139631, -0.510552, -0.0527227)
bones/102/position = Vector3(7.87218e-16, -0.0187458, 0.124694)
bones/102/rotation = Quaternion(0.99987, 1.40212e-13, -2.26121e-15, 0.0161218)
bones/103/rotation = Quaternion(-0.121295, -0.0974205, 0.987801, -0.00677668)
bones/105/position = Vector3(0.0246029, 0.165891, 0.0349601)
bones/105/rotation = Quaternion(0.609206, 0.507661, 0.467403, -0.390747)
bones/106/position = Vector3(8.34918e-09, 0.17704, 2.27141e-07)
bones/106/rotation = Quaternion(-0.413443, -0.0302991, -0.179541, 0.892139)
bones/107/position = Vector3(1.51586e-08, 0.17704, -1.33777e-07)
bones/107/rotation = Quaternion(-0.138217, 0.474205, -0.568491, 0.657909)
bones/108/rotation = Quaternion(-1.56539e-07, 0.13077, -1.00783e-07, 0.991413)
bones/109/rotation = Quaternion(0.537195, 0.130768, 0.0173394, 0.833079)
bones/110/rotation = Quaternion(-3.9926e-07, -0.356657, -8.87447e-08, 0.934236)
bones/111/rotation = Quaternion(0.0407458, -0.355652, -0.158946, 0.920102)
bones/113/position = Vector3(0.00331879, 0.0719537, 0.00334029)
bones/113/rotation = Quaternion(0.251782, 0.0304648, 0.00613054, 0.967285)
bones/114/rotation = Quaternion(0.249743, 0.226624, -0.0679009, 0.938967)
bones/115/rotation = Quaternion(0.219627, 0.00768301, 0.00677039, 0.97553)
bones/116/rotation = Quaternion(0.250739, 0.597975, 0.597027, 0.47235)
bones/117/rotation = Quaternion(0.138548, -0.429112, -0.138446, 0.88176)
bones/120/position = Vector3(0.000206178, 0.0818463, 0.002462)
bones/120/rotation = Quaternion(0.454971, -0.00428584, -0.116992, 0.882777)
bones/121/rotation = Quaternion(0.213691, 0.0932082, 0.0114335, 0.972377)
bones/122/rotation = Quaternion(0.218535, 0.0160367, -0.016557, 0.975557)
bones/124/position = Vector3(-0.00175382, 0.075902, -0.000211037)
bones/124/rotation = Quaternion(0.436588, -0.0112357, -0.139099, 0.888772)
bones/125/rotation = Quaternion(0.206714, 0.0803828, 0.0277684, 0.974698)
bones/126/rotation = Quaternion(0.22578, -0.010311, -0.0302471, 0.973654)
bones/128/position = Vector3(-0.00397366, 0.0690544, -0.00504325)
bones/128/rotation = Quaternion(0.32331, 0.0398336, 0.00175585, 0.945453)
bones/129/rotation = Quaternion(0.229804, 0.0480766, 0.0205404, 0.971832)
bones/130/rotation = Quaternion(0.176992, -0.0312002, -0.00886966, 0.983678)
bones/131/position = Vector3(-0.0246029, 0.165891, 0.0349601)
bones/131/rotation = Quaternion(0.609206, -0.507661, -0.467403, -0.390747)
bones/132/position = Vector3(2.5603e-08, 0.17704, 2.25951e-08)
bones/132/rotation = Quaternion(-0.431472, -0.0106506, 0.101661, 0.896317)
bones/133/position = Vector3(-2.65708e-09, 0.17704, 3.90465e-08)
bones/133/rotation = Quaternion(-0.279887, -0.53488, 0.478695, 0.637509)
bones/134/rotation = Quaternion(-3.31239e-08, -0.23691, 1.0149e-07, 0.971532)
bones/135/rotation = Quaternion(0.593182, -0.236908, -0.0898278, 0.76416)
bones/136/rotation = Quaternion(-3.14656e-07, 0.0937609, 2.50096e-07, 0.995595)
bones/137/rotation = Quaternion(-0.0389334, 0.0926971, -0.232048, 0.967494)
bones/139/position = Vector3(-0.00358458, 0.0738904, -0.0063453)
bones/139/rotation = Quaternion(0.553374, -0.0179989, -0.254586, 0.792868)
bones/140/rotation = Quaternion(0.230292, 0.221212, -0.0462571, 0.946515)
bones/141/rotation = Quaternion(0.195474, -0.00751332, -0.00695862, 0.980655)
bones/142/position = Vector3(-1.61354e-07, 1.42889e-07, 7.57694e-08)
bones/142/rotation = Quaternion(0.24361, -0.633622, -0.519348, 0.519091)
bones/143/rotation = Quaternion(0.249463, -0.0831427, 0.215057, 0.940535)
bones/144/rotation = Quaternion(0.374945, -0.0902974, 0.0270841, 0.922241)
bones/146/position = Vector3(-0.0521391, 0.0237608, 0.0413289)
bones/146/rotation = Quaternion(-0.0157575, 0.143899, -0.579688, 0.801877)
bones/148/position = Vector3(-0.00029587, 0.0824023, 0.00347442)
bones/148/rotation = Quaternion(0.651198, 0.0227081, 0.0496571, 0.756941)
bones/149/rotation = Quaternion(0.413753, 0.00334432, -0.0356367, 0.909685)
bones/150/rotation = Quaternion(0.420604, -0.0121575, 0.0195829, 0.906952)
bones/152/position = Vector3(0.00110348, 0.0757072, 0.00450044)
bones/152/rotation = Quaternion(0.642206, 0.036436, 0.132315, 0.754147)
bones/153/rotation = Quaternion(0.365935, -0.0376745, -0.0321694, 0.929321)
bones/154/rotation = Quaternion(0.385704, 0.0152324, 0.0280925, 0.922069)
bones/156/position = Vector3(0.00307085, 0.0668193, -0.00102606)
bones/156/rotation = Quaternion(0.628451, -0.0209153, 0.0762113, 0.773824)
bones/157/rotation = Quaternion(0.205367, -0.0320106, -0.0249906, 0.977842)
bones/158/rotation = Quaternion(0.15265, 0.0309714, 0.00963873, 0.987748)
bones/159/rotation = Quaternion(0.998304, 0.0563685, 0.00477285, -0.0137503)
bones/160/rotation = Quaternion(0.00340017, 5.80218e-05, -0.0170046, 0.99985)
bones/161/rotation = Quaternion(0.998122, -0.0605937, -0.00568178, 0.00699415)
bones/162/rotation = Quaternion(0.00464388, -0.000108072, 0.0232257, 0.99972)
bones/165/rotation = Quaternion(0.994186, 0.106639, 0.0102144, 0.0109088)
bones/166/position = Vector3(-3.03686e-08, 0.243252, 1.38608e-07)
bones/166/rotation = Quaternion(1.02389e-07, 0.00312037, -2.51835e-08, 0.999995)
bones/167/position = Vector3(-2.70314e-08, 0.243252, 7.09007e-08)
bones/167/rotation = Quaternion(0.168077, 0.00849609, -0.0130512, 0.985651)
bones/168/position = Vector3(-1.54233e-08, 0.229052, -3.14301e-09)
bones/168/rotation = Quaternion(-4.94281e-08, -0.110922, 2.99357e-08, 0.993829)
bones/169/position = Vector3(-1.20793e-08, 0.229052, 9.44078e-09)
bones/169/rotation = Quaternion(-0.487805, -0.150184, 0.148552, 0.847008)
bones/170/position = Vector3(-1.46163e-08, 0.155974, -2.24178e-08)
bones/170/rotation = Quaternion(-0.0252363, 0.936873, -0.348741, -0.00335307)
bones/171/rotation = Quaternion(0.990978, -0.125882, -0.012911, 0.0441631)
bones/172/position = Vector3(1.78339e-08, 0.244291, 1.64306e-07)
bones/172/rotation = Quaternion(1.77066e-07, -0.00390476, -5.11391e-08, 0.999992)
bones/173/position = Vector3(6.39931e-09, 0.244291, 1.18941e-07)
bones/173/rotation = Quaternion(0.100369, -0.00882661, 0.0123946, 0.994834)
bones/174/position = Vector3(6.13324e-09, 0.230096, -1.02717e-08)
bones/174/rotation = Quaternion(-1.12067e-08, 0.0279273, -5.55598e-08, 0.99961)
bones/175/position = Vector3(-3.4622e-08, 0.230096, -1.87482e-08)
bones/175/rotation = Quaternion(-0.426859, 0.0680774, -0.182586, 0.883074)
bones/176/position = Vector3(1.48762e-08, 0.155969, -3.39848e-08)
bones/176/rotation = Quaternion(0.0249553, 0.936789, -0.348988, 0.0033248)

[node name="racket" parent="Player/Model/h/test_04/game-rig/Skeleton3D" index="0"]
transform = Transform3D(-0.0438169, -0.086547, 0.995283, -0.588906, 0.806988, 0.044247, -0.807012, -0.58419, -0.0863277, -0.0644934, 1.39268, 0.537392)

[node name="AnimationTree" parent="Player/Model" index="6"]
parameters/move/blend_position = Vector2(0, 0)

[node name="AudioStreamPlayer3D" parent="Player" index="3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.56929, 0)

[node name="AiPlayer" parent="." instance=ExtResource("3_wwbby")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -15.0306)
player_data = ExtResource("4_7pj63")

[node name="Skeleton3D" parent="AiPlayer/Model/h/test_04/game-rig" index="0"]
bones/0/position = Vector3(-0.00181092, 0.931196, 0.00403439)
bones/0/rotation = Quaternion(-0.056622, -0.0887903, -0.00504867, 0.994427)
bones/1/rotation = Quaternion(0.167712, 0, 0, 0.985836)
bones/2/position = Vector3(-2.06795e-25, 0.0722904, -8.2832e-09)
bones/2/rotation = Quaternion(-0.137911, 0, 0, 0.990445)
bones/3/position = Vector3(-2.06795e-25, 0.0655323, -2.30357e-09)
bones/3/rotation = Quaternion(-0.00281477, 0, 0, 0.999996)
bones/4/position = Vector3(-2.06795e-25, 0.154112, -1.84935e-08)
bones/4/rotation = Quaternion(0.198776, 0, 0, 0.980045)
bones/5/position = Vector3(0, 0.239009, 2.36034e-08)
bones/5/rotation = Quaternion(0.0212192, 0, 0, 0.999775)
bones/6/rotation = Quaternion(-0.150944, 1.77821e-18, 9.25885e-18, 0.988542)
bones/9/rotation = Quaternion(0.93197, -0.0623171, 0.248928, -0.256092)
bones/14/rotation = Quaternion(0.93197, 0.0623171, -0.248928, -0.256092)
bones/17/rotation = Quaternion(-0.864953, 4.26408e-09, 3.92237e-08, 0.501854)
bones/18/position = Vector3(1.62387e-14, 0.00996152, 1.63673e-07)
bones/18/rotation = Quaternion(-0.119677, 2.88403e-08, -1.87362e-08, 0.992813)
bones/19/position = Vector3(0.0163967, -0.00752327, 0.11466)
bones/19/rotation = Quaternion(-0.236028, 0.628948, 0.710111, 0.210848)
bones/20/position = Vector3(-0.0163967, -0.00752327, 0.11466)
bones/20/rotation = Quaternion(0.236028, 0.628948, 0.710111, -0.210848)
bones/21/position = Vector3(-7.79359e-24, -0.0244299, 0.110742)
bones/22/rotation = Quaternion(0.0482493, 0.678689, 0.731447, -0.0451493)
bones/24/rotation = Quaternion(-0.0244467, 0.607187, -0.522655, 0.597962)
bones/25/rotation = Quaternion(0.229136, 0.016185, 0.236836, 0.944004)
bones/26/rotation = Quaternion(0.300183, 0.00223294, -0.0163157, 0.95374)
bones/27/rotation = Quaternion(0.15796, -0.0125443, 0.154279, 0.975238)
bones/28/rotation = Quaternion(0.516202, -0.517632, 0.128168, 0.670198)
bones/29/rotation = Quaternion(0.157632, 0.00834382, 0.125467, 0.979459)
bones/30/rotation = Quaternion(0.275872, 0.0139161, 0.171683, 0.945635)
bones/31/rotation = Quaternion(0.312319, 0.00393461, 0.12523, 0.941679)
bones/35/rotation = Quaternion(-0.0244467, -0.607187, 0.522655, 0.597962)
bones/36/rotation = Quaternion(0.229136, -0.016185, -0.236836, 0.944004)
bones/37/rotation = Quaternion(0.300183, -0.00223283, 0.0163157, 0.95374)
bones/38/rotation = Quaternion(0.15796, 0.0125442, -0.154279, 0.975238)
bones/39/rotation = Quaternion(0.516202, 0.517632, -0.128168, 0.670198)
bones/40/rotation = Quaternion(0.157632, -0.00834393, -0.125467, 0.979459)
bones/41/rotation = Quaternion(0.275872, -0.013916, -0.171683, 0.945635)
bones/42/rotation = Quaternion(0.312319, -0.00393455, -0.12523, 0.941679)
bones/45/position = Vector3(4.07128e-24, 0.087905, -0.0279831)
bones/49/rotation = Quaternion(-0.786092, -2.93146e-15, -2.30504e-15, 0.618109)
bones/50/position = Vector3(1.07203e-21, 0.0180315, 9.18769e-08)
bones/50/rotation = Quaternion(-0.325179, -2.56466e-16, -7.45827e-16, 0.945653)
bones/54/rotation = Quaternion(0.684877, -0.093981, -0.249509, 0.678128)
bones/57/rotation = Quaternion(0.684877, 0.093981, 0.249509, 0.678128)
bones/58/position = Vector3(3.09703e-08, -0.0286626, 0.118898)
bones/58/rotation = Quaternion(-0.596336, -0.400054, -0.463526, 0.519119)
bones/59/position = Vector3(2.43891e-08, 0.0131357, 5.01512e-08)
bones/59/rotation = Quaternion(-0.114132, -0.0550941, 0.207431, 0.970006)
bones/60/position = Vector3(-3.09703e-08, -0.0286626, 0.118898)
bones/60/rotation = Quaternion(-0.596336, 0.400054, 0.463525, 0.519119)
bones/61/position = Vector3(8.46552e-08, 0.0131356, -7.29739e-08)
bones/61/rotation = Quaternion(-0.114132, 0.0550941, -0.20743, 0.970006)
bones/62/position = Vector3(2.2703e-09, -0.037978, 0.118064)
bones/62/rotation = Quaternion(-0.566759, -0.417673, -0.413501, 0.577365)
bones/63/rotation = Quaternion(0.0250597, 0.00550421, 0.138882, 0.989977)
bones/64/position = Vector3(-2.2703e-09, -0.037978, 0.118064)
bones/64/rotation = Quaternion(-0.566759, 0.417673, 0.413501, 0.577365)
bones/65/rotation = Quaternion(0.0250597, -0.00550421, -0.138882, 0.989977)
bones/66/rotation = Quaternion(-0.17205, 0.791421, 0.524877, 0.26183)
bones/67/rotation = Quaternion(0.00871119, -0.0389792, -0.0890497, 0.995226)
bones/68/rotation = Quaternion(-0.179548, -0.0526499, -0.218928, 0.957633)
bones/69/rotation = Quaternion(-0.250338, 0.0465427, -0.2193, 0.941845)
bones/70/rotation = Quaternion(0.712732, -0.0518361, -0.696173, 0.0683269)
bones/71/position = Vector3(3.40334e-08, 0.0195701, -4.03802e-08)
bones/71/rotation = Quaternion(-0.0584436, -0.0607394, -0.0814584, 0.993106)
bones/72/rotation = Quaternion(0.17205, 0.791421, 0.524877, -0.26183)
bones/73/rotation = Quaternion(0.00871118, 0.0389792, 0.0890497, 0.995226)
bones/74/rotation = Quaternion(-0.179548, 0.0526499, 0.218928, 0.957633)
bones/75/rotation = Quaternion(-0.250338, -0.0465426, 0.2193, 0.941845)
bones/76/rotation = Quaternion(0.712732, 0.0518361, 0.696173, 0.0683269)
bones/77/position = Vector3(3.14157e-08, 0.0195698, -3.28736e-09)
bones/77/rotation = Quaternion(-0.0584436, 0.0607394, 0.0814584, 0.993106)
bones/81/rotation = Quaternion(0.697489, -0.222989, -0.633999, -0.248656)
bones/82/rotation = Quaternion(0.0751851, 0.864997, 0.476577, -0.137845)
bones/83/rotation = Quaternion(0.196873, 0.758392, 0.560138, -0.268939)
bones/85/rotation = Quaternion(0.697489, 0.222989, 0.633999, -0.248656)
bones/86/position = Vector3(0.0248723, -0.0367493, 0.105565)
bones/86/rotation = Quaternion(0.211863, 0.805385, -0.433438, 0.344383)
bones/87/position = Vector3(-5.51334e-08, 0.0389288, -4.75029e-09)
bones/87/rotation = Quaternion(-0.397768, -0.0499543, 0.0543535, 0.914511)
bones/88/position = Vector3(-0.0248723, -0.0367493, 0.105565)
bones/88/rotation = Quaternion(-0.211864, 0.805385, -0.433438, -0.344383)
bones/89/position = Vector3(-3.35113e-08, 0.0389289, 1.22371e-07)
bones/89/rotation = Quaternion(-0.397768, 0.0499544, -0.0543534, 0.914511)
bones/91/position = Vector3(-2.79194e-08, 0.0400507, 5.62055e-08)
bones/91/rotation = Quaternion(0.574809, 0.0442382, -0.173396, 0.798481)
bones/93/position = Vector3(6.83929e-08, 0.0400504, -6.84327e-08)
bones/93/rotation = Quaternion(0.574809, -0.0442382, 0.173396, 0.798481)
bones/94/rotation = Quaternion(0.744643, 0.13389, 0.653642, -0.0182421)
bones/95/rotation = Quaternion(0.846794, 0.139631, 0.510552, -0.0527227)
bones/97/rotation = Quaternion(0.744643, -0.13389, -0.653642, -0.0182421)
bones/98/rotation = Quaternion(0.846794, -0.139631, -0.510552, -0.0527227)
bones/102/position = Vector3(7.87218e-16, -0.0187458, 0.124694)
bones/102/rotation = Quaternion(0.99987, 1.40212e-13, -2.26121e-15, 0.0161218)
bones/103/rotation = Quaternion(-0.121295, -0.0974205, 0.987801, -0.00677668)
bones/105/position = Vector3(0.0246029, 0.165891, 0.0349601)
bones/105/rotation = Quaternion(0.609206, 0.507661, 0.467403, -0.390747)
bones/106/position = Vector3(8.34918e-09, 0.17704, 2.27141e-07)
bones/106/rotation = Quaternion(-0.413443, -0.0302991, -0.179541, 0.892139)
bones/107/position = Vector3(1.51586e-08, 0.17704, -1.33777e-07)
bones/107/rotation = Quaternion(-0.138217, 0.474205, -0.568491, 0.657909)
bones/108/rotation = Quaternion(-1.56539e-07, 0.13077, -1.00783e-07, 0.991413)
bones/109/rotation = Quaternion(0.537195, 0.130768, 0.0173394, 0.833079)
bones/110/rotation = Quaternion(-3.9926e-07, -0.356657, -8.87447e-08, 0.934236)
bones/111/rotation = Quaternion(0.0407458, -0.355652, -0.158946, 0.920102)
bones/113/position = Vector3(0.00331879, 0.0719537, 0.00334029)
bones/113/rotation = Quaternion(0.251782, 0.0304648, 0.00613054, 0.967285)
bones/114/rotation = Quaternion(0.249743, 0.226624, -0.0679009, 0.938967)
bones/115/rotation = Quaternion(0.219627, 0.00768301, 0.00677039, 0.97553)
bones/116/rotation = Quaternion(0.250739, 0.597975, 0.597027, 0.47235)
bones/117/rotation = Quaternion(0.138548, -0.429112, -0.138446, 0.88176)
bones/120/position = Vector3(0.000206178, 0.0818463, 0.002462)
bones/120/rotation = Quaternion(0.454971, -0.00428584, -0.116992, 0.882777)
bones/121/rotation = Quaternion(0.213691, 0.0932082, 0.0114335, 0.972377)
bones/122/rotation = Quaternion(0.218535, 0.0160367, -0.016557, 0.975557)
bones/124/position = Vector3(-0.00175382, 0.075902, -0.000211037)
bones/124/rotation = Quaternion(0.436588, -0.0112357, -0.139099, 0.888772)
bones/125/rotation = Quaternion(0.206714, 0.0803828, 0.0277684, 0.974698)
bones/126/rotation = Quaternion(0.22578, -0.010311, -0.0302471, 0.973654)
bones/128/position = Vector3(-0.00397366, 0.0690544, -0.00504325)
bones/128/rotation = Quaternion(0.32331, 0.0398336, 0.00175585, 0.945453)
bones/129/rotation = Quaternion(0.229804, 0.0480766, 0.0205404, 0.971832)
bones/130/rotation = Quaternion(0.176992, -0.0312002, -0.00886966, 0.983678)
bones/131/position = Vector3(-0.0246029, 0.165891, 0.0349601)
bones/131/rotation = Quaternion(0.609206, -0.507661, -0.467403, -0.390747)
bones/132/position = Vector3(2.5603e-08, 0.17704, 2.25951e-08)
bones/132/rotation = Quaternion(-0.431472, -0.0106506, 0.101661, 0.896317)
bones/133/position = Vector3(-2.65708e-09, 0.17704, 3.90465e-08)
bones/133/rotation = Quaternion(-0.279887, -0.53488, 0.478695, 0.637509)
bones/134/rotation = Quaternion(-3.31239e-08, -0.23691, 1.0149e-07, 0.971532)
bones/135/rotation = Quaternion(0.593182, -0.236908, -0.0898278, 0.76416)
bones/136/rotation = Quaternion(-3.14656e-07, 0.0937609, 2.50096e-07, 0.995595)
bones/137/rotation = Quaternion(-0.0389334, 0.0926971, -0.232048, 0.967494)
bones/139/position = Vector3(-0.00358458, 0.0738904, -0.0063453)
bones/139/rotation = Quaternion(0.553374, -0.0179989, -0.254586, 0.792868)
bones/140/rotation = Quaternion(0.230292, 0.221212, -0.0462571, 0.946515)
bones/141/rotation = Quaternion(0.195474, -0.00751332, -0.00695862, 0.980655)
bones/142/position = Vector3(-1.61354e-07, 1.42889e-07, 7.57694e-08)
bones/142/rotation = Quaternion(0.24361, -0.633622, -0.519348, 0.519091)
bones/143/rotation = Quaternion(0.249463, -0.0831427, 0.215057, 0.940535)
bones/144/rotation = Quaternion(0.374945, -0.0902974, 0.0270841, 0.922241)
bones/146/position = Vector3(-0.0521391, 0.0237608, 0.0413289)
bones/146/rotation = Quaternion(-0.0157575, 0.143899, -0.579688, 0.801877)
bones/148/position = Vector3(-0.00029587, 0.0824023, 0.00347442)
bones/148/rotation = Quaternion(0.651198, 0.0227081, 0.0496571, 0.756941)
bones/149/rotation = Quaternion(0.413753, 0.00334432, -0.0356367, 0.909685)
bones/150/rotation = Quaternion(0.420604, -0.0121575, 0.0195829, 0.906952)
bones/152/position = Vector3(0.00110348, 0.0757072, 0.00450044)
bones/152/rotation = Quaternion(0.642206, 0.036436, 0.132315, 0.754147)
bones/153/rotation = Quaternion(0.365935, -0.0376745, -0.0321694, 0.929321)
bones/154/rotation = Quaternion(0.385704, 0.0152324, 0.0280925, 0.922069)
bones/156/position = Vector3(0.00307085, 0.0668193, -0.00102606)
bones/156/rotation = Quaternion(0.628451, -0.0209153, 0.0762113, 0.773824)
bones/157/rotation = Quaternion(0.205367, -0.0320106, -0.0249906, 0.977842)
bones/158/rotation = Quaternion(0.15265, 0.0309714, 0.00963873, 0.987748)
bones/159/rotation = Quaternion(0.998304, 0.0563685, 0.00477285, -0.0137503)
bones/160/rotation = Quaternion(0.00340017, 5.80218e-05, -0.0170046, 0.99985)
bones/161/rotation = Quaternion(0.998122, -0.0605937, -0.00568178, 0.00699415)
bones/162/rotation = Quaternion(0.00464388, -0.000108072, 0.0232257, 0.99972)
bones/165/rotation = Quaternion(0.994186, 0.106639, 0.0102144, 0.0109088)
bones/166/position = Vector3(-3.03686e-08, 0.243252, 1.38608e-07)
bones/166/rotation = Quaternion(1.02389e-07, 0.00312037, -2.51835e-08, 0.999995)
bones/167/position = Vector3(-2.70314e-08, 0.243252, 7.09007e-08)
bones/167/rotation = Quaternion(0.168077, 0.00849609, -0.0130512, 0.985651)
bones/168/position = Vector3(-1.54233e-08, 0.229052, -3.14301e-09)
bones/168/rotation = Quaternion(-4.94281e-08, -0.110922, 2.99357e-08, 0.993829)
bones/169/position = Vector3(-1.20793e-08, 0.229052, 9.44078e-09)
bones/169/rotation = Quaternion(-0.487805, -0.150184, 0.148552, 0.847008)
bones/170/position = Vector3(-1.46163e-08, 0.155974, -2.24178e-08)
bones/170/rotation = Quaternion(-0.0252363, 0.936873, -0.348741, -0.00335307)
bones/171/rotation = Quaternion(0.990978, -0.125882, -0.012911, 0.0441631)
bones/172/position = Vector3(1.78339e-08, 0.244291, 1.64306e-07)
bones/172/rotation = Quaternion(1.77066e-07, -0.00390476, -5.11391e-08, 0.999992)
bones/173/position = Vector3(6.39931e-09, 0.244291, 1.18941e-07)
bones/173/rotation = Quaternion(0.100369, -0.00882661, 0.0123946, 0.994834)
bones/174/position = Vector3(6.13324e-09, 0.230096, -1.02717e-08)
bones/174/rotation = Quaternion(-1.12067e-08, 0.0279273, -5.55598e-08, 0.99961)
bones/175/position = Vector3(-3.4622e-08, 0.230096, -1.87482e-08)
bones/175/rotation = Quaternion(-0.426859, 0.0680774, -0.182586, 0.883074)
bones/176/position = Vector3(1.48762e-08, 0.155969, -3.39848e-08)
bones/176/rotation = Quaternion(0.0249553, 0.936789, -0.348988, 0.0033248)

[node name="racket" parent="AiPlayer/Model/h/test_04/game-rig/Skeleton3D" index="0"]
transform = Transform3D(-0.0438169, -0.086547, 0.995283, -0.588906, 0.806988, 0.044247, -0.807012, -0.58419, -0.0863277, -0.0644934, 1.39268, 0.537392)

[node name="AnimationTree" parent="AiPlayer/Model" index="6"]
parameters/move/blend_position = Vector2(0, 0)

[node name="AudioStreamPlayer3D" parent="AiPlayer" index="3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.56929, 0)

[node name="TelevisionHUD" parent="." instance=ExtResource("4_upnw7")]
metadata/_edit_lock_ = true

[node name="Panel" parent="TelevisionHUD/MatchStatsPanel" index="0"]
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
offset_left = 0.0
offset_top = 0.0
offset_right = 500.0
offset_bottom = 300.0

[node name="Label" parent="TelevisionHUD/MatchStatsPanel/Panel" index="0"]
offset_left = 0.0
offset_top = 0.0
offset_right = 40.0
offset_bottom = 23.0

[node name="Label2" parent="TelevisionHUD/MatchStatsPanel/Panel" index="1"]
offset_left = 0.0
offset_top = 0.0
offset_right = 55.0
offset_bottom = 31.0

[node name="Label3" parent="TelevisionHUD/MatchStatsPanel/Panel" index="2"]
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
offset_left = 0.0
offset_top = 0.0
offset_right = 55.0
offset_bottom = 31.0

[node name="PlayerImage" parent="TelevisionHUD/MatchStatsPanel" index="1"]
offset_left = 0.0
offset_top = 0.0
offset_right = 200.0
offset_bottom = 200.0

[node name="PlayerImage2" parent="TelevisionHUD/MatchStatsPanel" index="2"]
offset_left = 0.0
offset_top = 0.0
offset_right = 200.0
offset_bottom = 200.0

[node name="AnimationPlayer" parent="TelevisionHUD/MatchStatsPanel" index="3"]
libraries = {
&"": SubResource("AnimationLibrary_wicjn")
}

[node name="Stadium" parent="." instance=ExtResource("6_4vere")]

[node name="Cameras" parent="." instance=ExtResource("7_6frth")]

[node name="MatchManager" parent="." node_paths=PackedStringArray("player0", "player1", "court", "stadium", "televisionHud", "umpire") groups=["Player"] instance=ExtResource("8_2s2ac")]
player0 = NodePath("../Player")
player1 = NodePath("../AiPlayer")
court = NodePath("../Stadium/Court")
stadium = NodePath("../Stadium")
televisionHud = NodePath("../TelevisionHUD")
umpire = NodePath("../Umpire")

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_xdr50")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(-0.441899, -0.894442, -0.0685425, -0.706239, 0.299768, 0.641377, -0.553129, 0.331832, -0.764157, 1.20894, 7.64477, -8.49079)
shadow_enabled = true

[node name="TrajectoryDrawer" parent="." instance=ExtResource("11_324nl")]
visible = false

[node name="CanvasLayer" parent="." instance=ExtResource("10_7cjfu")]

[node name="Umpire" parent="." instance=ExtResource("12_ard7f")]
transform = Transform3D(-4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, -7.18558, 0, 0)

[node name="MatchDebugHud" parent="." node_paths=PackedStringArray("match_manager") instance=ExtResource("11_7qdcc")]
match_manager = NodePath("../MatchManager")

[node name="PauseMenu" parent="." node_paths=PackedStringArray("root") instance=ExtResource("13_rcvjq")]
process_mode = 3
root = NodePath("..")
metadata/_edit_use_anchors_ = true

[node name="CrowdBlock" parent="." instance=ExtResource("14_o6v58")]
transform = Transform3D(-4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, 12.9272, 0.623559, -16.6489)

[editable path="Player"]
[editable path="Player/Model"]
[editable path="Player/Model/h/test_04"]
[editable path="AiPlayer"]
[editable path="AiPlayer/Model"]
[editable path="AiPlayer/Model/h/test_04"]
[editable path="TelevisionHUD"]
[editable path="TelevisionHUD/ScoreDisplay"]
[editable path="TelevisionHUD/ScoreDisplay/VBoxContainer/Player1ScorePanel"]
[editable path="Stadium"]
[editable path="Stadium/stadium"]
[editable path="Cameras"]
[editable path="Cameras/Stadium"]
[editable path="Cameras/Stadium/stadium"]
[editable path="MatchManager"]
