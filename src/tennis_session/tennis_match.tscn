[gd_scene load_steps=25 format=3 uid="uid://bcwuxgarbilrg"]

[ext_resource type="Script" uid="uid://bap4smopj0g20" path="res://src/tennis_session/tennis_match.gd" id="1_3pywv"]
[ext_resource type="PackedScene" uid="uid://bujaw8qgawaj8" path="res://src/players/humanPlayer.tscn" id="2_i47c8"]
[ext_resource type="PackedScene" uid="uid://fdj1nvw8fcxn" path="res://src/players/AiPlayer.tscn" id="3_wwbby"]
[ext_resource type="Resource" uid="uid://cngw1dhrbgb21" path="res://src/players/resources/alcaraz.tres" id="4_7pj63"]
[ext_resource type="PackedScene" uid="uid://r13b2pnjirfc" path="res://src/television/television-hud.tscn" id="4_upnw7"]
[ext_resource type="PackedScene" uid="uid://d237t32p1sgei" path="res://src/tennis_location/us_open/stadium.tscn" id="6_4vere"]
[ext_resource type="PackedScene" uid="uid://bq11dsxkra3s4" path="res://src/cameras.tscn" id="7_6frth"]
[ext_resource type="PackedScene" uid="uid://c7717agxjy34d" path="res://src/tennis_session/match_manager.tscn" id="8_2s2ac"]
[ext_resource type="PackedScene" uid="uid://cggqb75a8w8r" path="res://addons/debug_menu/debug_menu.tscn" id="10_7cjfu"]
[ext_resource type="PackedScene" uid="uid://b7nclbgkw6veg" path="res://src/hud/match_debug_hud.tscn" id="11_7qdcc"]
[ext_resource type="PackedScene" uid="uid://brw673es8wnx2" path="res://src/trajectory_drawer.tscn" id="11_324nl"]
[ext_resource type="PackedScene" uid="uid://dnkjfx5fk78c1" path="res://src/umpire/umpire.tscn" id="12_ard7f"]
[ext_resource type="PackedScene" uid="uid://bxr6pnwu01hft" path="res://src/menus/pause_menu.tscn" id="13_rcvjq"]
[ext_resource type="PackedScene" uid="uid://ds5ryhspuxtpf" path="res://src/crowd/crowd_block.tscn" id="14_o6v58"]

[sub_resource type="Animation" id="1"]
resource_name = "start"
length = 3.0
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(3),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_wicjn"]
_data = {
&"start": SubResource("1")
}

[sub_resource type="Shader" id="Shader_oe3gx"]
code = "
// NOTE: Shader automatically converted from Godot Engine 4.3.stable's ProceduralSkyMaterial.

shader_type sky;
render_mode use_debanding;

uniform vec4 sky_top_color : source_color = vec4(0.385, 0.454, 0.55, 1.0);
uniform vec4 sky_horizon_color : source_color = vec4(0.646, 0.656, 0.67, 1.0);
uniform float sky_curve : hint_range(0, 1) = 0.15;
uniform float sky_energy = 1.0; // In Lux.
uniform sampler2D sky_cover : filter_linear, source_color, hint_default_black;
uniform vec4 sky_cover_modulate : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform vec4 ground_bottom_color : source_color = vec4(0.2, 0.169, 0.133, 1.0);
uniform vec4 ground_horizon_color : source_color = vec4(0.646, 0.656, 0.67, 1.0);
uniform float ground_curve : hint_range(0, 1) = 0.02;
uniform float ground_energy = 1.0;
uniform float sun_angle_max = 30.0;
uniform float sun_curve : hint_range(0, 1) = 0.15;
uniform float exposure : hint_range(0, 128) = 1.0;

uniform sampler2D cloud_texture;
uniform sampler2D cloud_texture2;
uniform vec2 cloud_direction;
uniform vec2 cloud_direction2;
uniform vec2 cloud_scale;
uniform float cloud_distance;
uniform float cloud_speed;
uniform float cloud_speed2;

void sky() {
	float v_angle = acos(clamp(EYEDIR.y, -1.0, 1.0));
	float c = (1.0 - v_angle / (PI * 0.5));
	vec3 sky = mix(sky_horizon_color.rgb, sky_top_color.rgb, clamp(1.0 - pow(1.0 - c, 1.0 / sky_curve), 0.0, 1.0));
	sky *= sky_energy;

	if (LIGHT0_ENABLED) {
		float sun_angle = acos(dot(LIGHT0_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT0_SIZE) {
			sky = LIGHT0_COLOR * LIGHT0_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT0_SIZE) / (sun_angle_max - LIGHT0_SIZE);
			sky = mix(LIGHT0_COLOR * LIGHT0_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT1_ENABLED) {
		float sun_angle = acos(dot(LIGHT1_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT1_SIZE) {
			sky = LIGHT1_COLOR * LIGHT1_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT1_SIZE) / (sun_angle_max - LIGHT1_SIZE);
			sky = mix(LIGHT1_COLOR * LIGHT1_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT2_ENABLED) {
		float sun_angle = acos(dot(LIGHT2_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT2_SIZE) {
			sky = LIGHT2_COLOR * LIGHT2_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT2_SIZE) / (sun_angle_max - LIGHT2_SIZE);
			sky = mix(LIGHT2_COLOR * LIGHT2_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT3_ENABLED) {
		float sun_angle = acos(dot(LIGHT3_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT3_SIZE) {
			sky = LIGHT3_COLOR * LIGHT3_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT3_SIZE) / (sun_angle_max - LIGHT3_SIZE);
			sky = mix(LIGHT3_COLOR * LIGHT3_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	vec4 sky_cover_texture = texture(sky_cover, SKY_COORDS);
	sky += (sky_cover_texture.rgb * sky_cover_modulate.rgb) * sky_cover_texture.a * sky_cover_modulate.a * sky_energy;

	c = (v_angle - (PI * 0.5)) / (PI * 0.5);
	vec3 ground = mix(ground_horizon_color.rgb, ground_bottom_color.rgb, clamp(1.0 - pow(1.0 - c, 1.0 / ground_curve), 0.0, 1.0));
	ground *= ground_energy;

	vec2 sky_uv = EYEDIR.xz / EYEDIR.y;
	vec3 clouds = texture(cloud_texture, sky_uv * cloud_scale + TIME * cloud_direction * cloud_speed).rgb - texture(cloud_texture2, sky_uv * cloud_scale + TIME * cloud_direction2 * cloud_speed2).rgb;
	//clouds = clouds - smoothstep(0.0, EYEDIR.y, cloud_distance);
	clouds = clamp(clouds, 0.0, 1.0);
	sky += clouds;
	
	COLOR = mix(ground, sky, step(0.0, EYEDIR.y)) * exposure;
}
"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_verti"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_ls07b"]
width = 1024
height = 1024
seamless = true
noise = SubResource("FastNoiseLite_verti")

[sub_resource type="FastNoiseLite" id="FastNoiseLite_jpxow"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_ltmrp"]
width = 1024
height = 1024
seamless = true
noise = SubResource("FastNoiseLite_jpxow")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_t6lxu"]
shader = SubResource("Shader_oe3gx")
shader_parameter/sky_top_color = Color(0.291673, 0.457424, 0.658811, 1)
shader_parameter/sky_horizon_color = Color(0.6463, 0.6558, 0.6708, 1)
shader_parameter/sky_curve = 0.15
shader_parameter/sky_energy = 1.0
shader_parameter/sky_cover_modulate = Color(1, 1, 1, 1)
shader_parameter/ground_bottom_color = Color(0.2, 0.169, 0.133, 1)
shader_parameter/ground_horizon_color = Color(0.646, 0.656, 0.67, 1)
shader_parameter/ground_curve = 0.02
shader_parameter/ground_energy = 1.0
shader_parameter/sun_angle_max = 0.523599
shader_parameter/sun_curve = 0.15
shader_parameter/exposure = 1.0
shader_parameter/cloud_texture = SubResource("NoiseTexture2D_ls07b")
shader_parameter/cloud_texture2 = SubResource("NoiseTexture2D_ltmrp")
shader_parameter/cloud_direction = Vector2(-1, 1)
shader_parameter/cloud_direction2 = Vector2(1, 0)
shader_parameter/cloud_scale = Vector2(0.05, 0.05)
shader_parameter/cloud_distance = 0.0
shader_parameter/cloud_speed = 0.001
shader_parameter/cloud_speed2 = 0.002

[sub_resource type="Sky" id="Sky_l3u5c"]
sky_material = SubResource("ShaderMaterial_t6lxu")

[sub_resource type="Environment" id="Environment_xdr50"]
background_mode = 2
background_energy_multiplier = 1.4
sky = SubResource("Sky_l3u5c")
ambient_light_source = 3
tonemap_mode = 1
tonemap_exposure = 1.15
tonemap_white = 0.6
glow_enabled = true
fog_light_energy = 1.4
fog_density = 0.0
adjustment_brightness = 0.8
adjustment_contrast = 0.95
adjustment_saturation = 1.85

[node name="TennisMatch" type="Node"]
script = ExtResource("1_3pywv")

[node name="Player" parent="." instance=ExtResource("2_i47c8")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 12.3828)
move_speed = 6.0

[node name="Skeleton3D" parent="Player/Model/h/player/game-rig" index="0"]
bones/0/position = Vector3(0, 0.945494, 0.0117561)
bones/0/rotation = Quaternion(-0.0991104, 0, 0, 0.995076)
bones/1/rotation = Quaternion(0.167627, 0, 0, 0.985851)
bones/2/position = Vector3(0, 0.0722904, 3.60575e-08)
bones/2/rotation = Quaternion(-0.137911, 0, 0, 0.990445)
bones/3/position = Vector3(0, 0.065713, 1.31618e-08)
bones/3/rotation = Quaternion(-0.00301965, 0, 0, 0.999995)
bones/4/position = Vector3(0, 0.154226, 1.03508e-09)
bones/4/rotation = Quaternion(0.198505, 0, 0, 0.9801)
bones/5/position = Vector3(0, 0.239275, 4.35749e-09)
bones/5/rotation = Quaternion(0.0215019, 0, 0, 0.999769)
bones/6/rotation = Quaternion(-0.151045, 0, 0, 0.988527)
bones/9/rotation = Quaternion(0.931971, -0.0623164, 0.248928, -0.256088)
bones/14/rotation = Quaternion(0.931971, 0.0623164, -0.248928, -0.256088)
bones/17/rotation = Quaternion(-0.86495, 4.26405e-09, 3.92236e-08, 0.501857)
bones/18/position = Vector3(1.37372e-14, 0.00996181, 8.5608e-08)
bones/18/rotation = Quaternion(-0.119691, 3.1558e-08, 3.80455e-09, 0.992811)
bones/19/position = Vector3(0.0163968, -0.00752359, 0.11466)
bones/20/position = Vector3(-0.0163968, -0.00752359, 0.11466)
bones/21/position = Vector3(0, -0.02443, 0.110742)
bones/24/rotation = Quaternion(-0.0244435, 0.607186, -0.522652, 0.597965)
bones/25/rotation = Quaternion(0.229137, 0.016186, 0.236833, 0.944005)
bones/26/rotation = Quaternion(0.300171, 0.00224732, -0.0163608, 0.953742)
bones/27/rotation = Quaternion(0.157976, -0.0125538, 0.154355, 0.975223)
bones/28/rotation = Quaternion(0.516203, -0.517634, 0.128175, 0.670195)
bones/29/rotation = Quaternion(0.157626, 0.00834236, 0.125471, 0.97946)
bones/30/rotation = Quaternion(0.27587, 0.0139218, 0.171662, 0.945639)
bones/31/rotation = Quaternion(0.312317, 0.00392896, 0.125246, 0.941677)
bones/35/rotation = Quaternion(-0.0244435, -0.607186, 0.522652, 0.597965)
bones/36/rotation = Quaternion(0.229137, -0.016186, -0.236833, 0.944005)
bones/37/rotation = Quaternion(0.300171, -0.0022473, 0.0163609, 0.953742)
bones/38/rotation = Quaternion(0.157976, 0.0125537, -0.154355, 0.975223)
bones/39/rotation = Quaternion(0.516203, 0.517634, -0.128175, 0.670195)
bones/40/rotation = Quaternion(0.157626, -0.00834248, -0.125471, 0.97946)
bones/41/rotation = Quaternion(0.27587, -0.0139216, -0.171662, 0.945639)
bones/42/rotation = Quaternion(0.312317, -0.00392894, -0.125246, 0.941677)
bones/45/position = Vector3(0, 0.0879051, -0.0279832)
bones/49/rotation = Quaternion(-0.78609, 2.61199e-14, 2.05382e-14, 0.618112)
bones/50/position = Vector3(4.23516e-21, 0.0180319, -1.75822e-07)
bones/50/rotation = Quaternion(-0.325181, 2.28492e-15, 6.64486e-15, 0.945652)
bones/54/rotation = Quaternion(0.684876, -0.0939814, -0.249508, 0.678128)
bones/57/rotation = Quaternion(0.684876, 0.0939814, 0.249508, 0.678128)
bones/58/position = Vector3(-3.86349e-08, -0.0286635, 0.118898)
bones/59/position = Vector3(-6.19966e-08, 0.0131357, 7.77576e-08)
bones/59/rotation = Quaternion(-0.114116, -0.0550915, 0.207426, 0.970009)
bones/60/position = Vector3(3.86349e-08, -0.0286635, 0.118898)
bones/60/rotation = Quaternion(-0.596341, 0.400049, 0.463528, 0.519114)
bones/61/position = Vector3(1.25082e-08, 0.0131358, 4.80257e-08)
bones/61/rotation = Quaternion(-0.114116, 0.0550915, -0.207426, 0.970009)
bones/62/position = Vector3(8.59452e-09, -0.0379785, 0.118064)
bones/62/rotation = Quaternion(-0.566769, -0.417665, -0.413506, 0.577358)
bones/63/rotation = Quaternion(0.0250831, 0.00550765, 0.138876, 0.989977)
bones/64/position = Vector3(-8.59452e-09, -0.0379785, 0.118064)
bones/64/rotation = Quaternion(-0.566769, 0.417665, 0.413506, 0.577358)
bones/65/rotation = Quaternion(0.0250831, -0.00550765, -0.138876, 0.989977)
bones/66/rotation = Quaternion(-0.172049, 0.791424, 0.524873, 0.261831)
bones/67/rotation = Quaternion(0.00870812, -0.0389789, -0.0890473, 0.995226)
bones/68/rotation = Quaternion(-0.179551, -0.0526494, -0.218929, 0.957632)
bones/69/rotation = Quaternion(-0.250333, 0.0465416, -0.2193, 0.941846)
bones/70/rotation = Quaternion(0.712732, -0.051836, -0.696173, 0.0683269)
bones/71/position = Vector3(-5.15911e-08, 0.0195702, 2.32399e-09)
bones/71/rotation = Quaternion(-0.0584434, -0.0607394, -0.0814582, 0.993106)
bones/72/rotation = Quaternion(0.172049, 0.791424, 0.524873, -0.261831)
bones/73/rotation = Quaternion(0.00870811, 0.0389789, 0.0890473, 0.995226)
bones/74/rotation = Quaternion(-0.179551, 0.0526494, 0.218929, 0.957632)
bones/75/rotation = Quaternion(-0.250333, -0.0465416, 0.2193, 0.941846)
bones/76/rotation = Quaternion(0.712732, 0.051836, 0.696173, 0.0683268)
bones/77/position = Vector3(3.23363e-08, 0.0195699, 5.54122e-09)
bones/77/rotation = Quaternion(-0.0584434, 0.0607394, 0.0814582, 0.993106)
bones/86/position = Vector3(0.0248724, -0.0367494, 0.105565)
bones/87/position = Vector3(-1.37396e-08, 0.0389292, -1.01359e-07)
bones/87/rotation = Quaternion(-0.397767, -0.0499544, 0.0543533, 0.914512)
bones/89/position = Vector3(-3.57798e-08, 0.0389289, 8.16762e-08)
bones/91/position = Vector3(-7.31121e-08, 0.0400507, -4.7092e-08)
bones/91/rotation = Quaternion(0.574808, 0.0442383, -0.173396, 0.798482)
bones/92/rotation = Quaternion(0.352567, 0.314682, 0.871803, -0.128958)
bones/93/position = Vector3(-5.92611e-08, 0.0400506, 1.31662e-07)
bones/93/rotation = Quaternion(0.574808, -0.0442383, 0.173396, 0.798482)
bones/94/rotation = Quaternion(0.744643, 0.133891, 0.653642, -0.0182425)
bones/95/rotation = Quaternion(0.846794, 0.13963, 0.510552, -0.0527228)
bones/97/rotation = Quaternion(0.744643, -0.133891, -0.653642, -0.0182425)
bones/98/rotation = Quaternion(0.846794, -0.139631, -0.510552, -0.0527228)
bones/102/position = Vector3(-1.92836e-16, -0.018746, 0.124694)
bones/102/rotation = Quaternion(0.99987, -2.50585e-14, 4.04112e-16, 0.0161222)
bones/103/rotation = Quaternion(-0.121295, -0.0974205, 0.987801, -0.00677664)
bones/105/position = Vector3(0.0246329, 0.166218, 0.0349749)
bones/105/rotation = Quaternion(0.609284, 0.507757, 0.467299, -0.390625)
bones/106/position = Vector3(-1.36773e-08, 0.177257, -2.16096e-07)
bones/106/rotation = Quaternion(-0.413469, -0.0301304, -0.179323, 0.892177)
bones/107/position = Vector3(1.09017e-08, 0.177257, -1.32636e-07)
bones/107/rotation = Quaternion(-0.138364, 0.474286, -0.568392, 0.657905)
bones/108/rotation = Quaternion(8.98693e-08, 0.131166, 5.56113e-08, 0.99136)
bones/109/rotation = Quaternion(0.537578, 0.131077, 0.0167631, 0.832795)
bones/110/rotation = Quaternion(-2.31682e-08, -0.356468, 1.59651e-07, 0.934308)
bones/111/rotation = Quaternion(0.0408505, -0.355542, -0.157209, 0.920438)
bones/113/position = Vector3(0.00331841, 0.0719536, 0.00334034)
bones/113/rotation = Quaternion(0.251783, 0.030465, 0.00613046, 0.967285)
bones/114/rotation = Quaternion(0.249743, 0.226624, -0.0679011, 0.938967)
bones/115/rotation = Quaternion(0.219627, 0.00768286, 0.00677099, 0.97553)
bones/116/rotation = Quaternion(0.250739, 0.597975, 0.597028, 0.472349)
bones/117/rotation = Quaternion(0.138548, -0.429112, -0.138447, 0.881759)
bones/120/position = Vector3(0.000206154, 0.0818464, 0.00246205)
bones/120/rotation = Quaternion(0.454971, -0.00428581, -0.116992, 0.882777)
bones/121/rotation = Quaternion(0.213691, 0.0932084, 0.0114328, 0.972377)
bones/122/rotation = Quaternion(0.218534, 0.0160367, -0.0165556, 0.975557)
bones/124/position = Vector3(-0.00175377, 0.0759021, -0.000211009)
bones/124/rotation = Quaternion(0.436588, -0.0112357, -0.139099, 0.888772)
bones/125/rotation = Quaternion(0.206714, 0.0803829, 0.0277685, 0.974698)
bones/126/rotation = Quaternion(0.22578, -0.0103113, -0.0302463, 0.973654)
bones/128/position = Vector3(-0.00397393, 0.0690545, -0.00504344)
bones/128/rotation = Quaternion(0.32331, 0.0398338, 0.00175508, 0.945453)
bones/129/rotation = Quaternion(0.229803, 0.0480768, 0.0205414, 0.971832)
bones/130/rotation = Quaternion(0.176993, -0.0312002, -0.00887036, 0.983678)
bones/131/position = Vector3(-0.0246329, 0.166218, 0.0349749)
bones/131/rotation = Quaternion(0.609284, -0.507757, -0.467299, -0.390625)
bones/132/position = Vector3(1.165e-08, 0.177258, -2.34094e-07)
bones/132/rotation = Quaternion(-0.43153, -0.0106536, 0.101695, 0.896285)
bones/133/position = Vector3(4.88456e-09, 0.177258, -1.29314e-07)
bones/133/rotation = Quaternion(-0.279939, -0.534806, 0.478818, 0.637456)
bones/134/rotation = Quaternion(-1.29608e-08, -0.236982, -3.56867e-08, 0.971514)
bones/135/rotation = Quaternion(0.592737, -0.237001, -0.0897376, 0.764487)
bones/136/rotation = Quaternion(1.08787e-08, 0.0937609, -2.49246e-08, 0.995595)
bones/137/rotation = Quaternion(-0.0389333, 0.0926972, -0.232048, 0.967494)
bones/139/position = Vector3(-0.00358427, 0.0738904, -0.00634562)
bones/139/rotation = Quaternion(0.553375, -0.0179991, -0.254585, 0.792868)
bones/140/rotation = Quaternion(0.230292, 0.22121, -0.0462574, 0.946516)
bones/141/rotation = Quaternion(0.195474, -0.00751371, -0.00695866, 0.980656)
bones/142/position = Vector3(-8.52334e-09, 2.47482e-07, -1.70967e-07)
bones/142/rotation = Quaternion(0.24361, -0.633622, -0.519348, 0.519091)
bones/143/rotation = Quaternion(0.249462, -0.0831425, 0.215058, 0.940535)
bones/144/rotation = Quaternion(0.374945, -0.0902972, 0.0270827, 0.922241)
bones/146/rotation = Quaternion(-0.0157574, 0.143899, -0.579688, 0.801877)
bones/148/position = Vector3(-0.000295915, 0.0824022, 0.00347466)
bones/148/rotation = Quaternion(0.651198, 0.022708, 0.049658, 0.756941)
bones/149/rotation = Quaternion(0.413753, 0.00334351, -0.0356371, 0.909685)
bones/150/rotation = Quaternion(0.420604, -0.0121572, 0.0195825, 0.906952)
bones/152/position = Vector3(0.00110349, 0.0757071, 0.00450043)
bones/152/rotation = Quaternion(0.642206, 0.0364361, 0.132315, 0.754146)
bones/153/rotation = Quaternion(0.365935, -0.0376738, -0.0321699, 0.929321)
bones/154/rotation = Quaternion(0.385704, 0.0152328, 0.0280927, 0.922069)
bones/156/position = Vector3(0.00307062, 0.0668194, -0.00102625)
bones/156/rotation = Quaternion(0.62845, -0.0209155, 0.0762118, 0.773824)
bones/157/rotation = Quaternion(0.205367, -0.0320112, -0.0249894, 0.977842)
bones/158/rotation = Quaternion(0.152651, 0.0309711, 0.00963664, 0.987748)
bones/159/rotation = Quaternion(0.996899, 0.0434844, 0.00286167, -0.0655206)
bones/160/rotation = Quaternion(5.24085e-09, 2.48998e-08, -4.60205e-08, 1)
bones/161/rotation = Quaternion(0.996899, -0.0434844, -0.00286165, -0.0655206)
bones/162/rotation = Quaternion(-3.83946e-10, -2.51096e-08, 4.85816e-08, 1)
bones/165/rotation = Quaternion(0.996949, 0.0437426, 0.0028353, -0.0645848)
bones/166/position = Vector3(6.08266e-09, 0.245823, 5.00272e-08)
bones/166/rotation = Quaternion(7.3305e-08, -8.4316e-07, 1.7877e-08, 1)
bones/167/position = Vector3(2.26569e-08, 0.245824, 3.28362e-08)
bones/167/rotation = Quaternion(0.0531176, 0.00529869, -0.0117237, 0.998505)
bones/168/position = Vector3(5.30999e-08, 0.231631, 6.07238e-09)
bones/168/rotation = Quaternion(-6.11726e-08, 1.00431e-08, 3.69109e-08, 1)
bones/169/position = Vector3(1.17032e-08, 0.231631, 1.93872e-08)
bones/169/rotation = Quaternion(-0.539665, -0.039223, 0.0413491, 0.839948)
bones/170/position = Vector3(-9.26504e-09, 0.156054, -1.68594e-08)
bones/170/rotation = Quaternion(-0.0131879, 0.965858, -0.258721, -0.00275884)
bones/171/rotation = Quaternion(0.996949, -0.0437426, -0.0028353, -0.0645848)
bones/172/position = Vector3(-5.86437e-09, 0.245824, 6.67294e-08)
bones/172/rotation = Quaternion(6.45916e-08, 8.14478e-07, -2.27665e-08, 1)
bones/173/position = Vector3(-1.13953e-08, 0.245823, 3.75643e-08)
bones/173/rotation = Quaternion(0.0531176, -0.00529866, 0.0117237, 0.998505)
bones/174/position = Vector3(1.04774e-09, 0.231631, 2.84859e-09)
bones/174/rotation = Quaternion(-6.04273e-08, 5.01275e-09, -2.03945e-08, 1)
bones/175/position = Vector3(1.35008e-08, 0.23163, 4.49471e-09)
bones/175/rotation = Quaternion(-0.539665, 0.039223, -0.0413491, 0.839948)
bones/176/position = Vector3(-1.44022e-08, 0.156052, -2.6326e-08)
bones/176/rotation = Quaternion(0.0131879, 0.965858, -0.258721, 0.00275884)

[node name="racket" parent="Player/Model/h/player/game-rig/Skeleton3D" index="0"]
transform = Transform3D(-0.186207, -0.188294, 0.964299, -0.653854, 0.756316, 0.0214224, -0.733348, -0.626522, -0.263948, 0.03264, 1.45165, 0.506936)

[node name="AnimationTree" parent="Player/Model" index="5"]
parameters/move/blend_position = Vector2(0, 0)

[node name="Camera3D" parent="Player" index="3"]
top_level = false

[node name="AiPlayer" parent="." instance=ExtResource("3_wwbby")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -15.0306)
player_data = ExtResource("4_7pj63")

[node name="Skeleton3D" parent="AiPlayer/Model/h/player/game-rig" index="0"]
bones/0/position = Vector3(0, 0.945494, 0.0117561)
bones/0/rotation = Quaternion(-0.0991104, 0, 0, 0.995076)
bones/1/rotation = Quaternion(0.167627, 0, 0, 0.985851)
bones/2/position = Vector3(0, 0.0722904, 3.60575e-08)
bones/2/rotation = Quaternion(-0.137911, 0, 0, 0.990445)
bones/3/position = Vector3(0, 0.065713, 1.31618e-08)
bones/3/rotation = Quaternion(-0.00301965, 0, 0, 0.999995)
bones/4/position = Vector3(0, 0.154226, 1.03508e-09)
bones/4/rotation = Quaternion(0.198505, 0, 0, 0.9801)
bones/5/position = Vector3(0, 0.239275, 4.35749e-09)
bones/5/rotation = Quaternion(0.0215019, 0, 0, 0.999769)
bones/6/rotation = Quaternion(-0.151045, 0, 0, 0.988527)
bones/9/rotation = Quaternion(0.931971, -0.0623164, 0.248928, -0.256088)
bones/14/rotation = Quaternion(0.931971, 0.0623164, -0.248928, -0.256088)
bones/17/rotation = Quaternion(-0.86495, 4.26405e-09, 3.92236e-08, 0.501857)
bones/18/position = Vector3(1.37372e-14, 0.00996181, 8.5608e-08)
bones/18/rotation = Quaternion(-0.119691, 3.1558e-08, 3.80455e-09, 0.992811)
bones/19/position = Vector3(0.0163968, -0.00752359, 0.11466)
bones/20/position = Vector3(-0.0163968, -0.00752359, 0.11466)
bones/21/position = Vector3(0, -0.02443, 0.110742)
bones/24/rotation = Quaternion(-0.0244435, 0.607186, -0.522652, 0.597965)
bones/25/rotation = Quaternion(0.229137, 0.016186, 0.236833, 0.944005)
bones/26/rotation = Quaternion(0.300171, 0.00224732, -0.0163608, 0.953742)
bones/27/rotation = Quaternion(0.157976, -0.0125538, 0.154355, 0.975223)
bones/28/rotation = Quaternion(0.516203, -0.517634, 0.128175, 0.670195)
bones/29/rotation = Quaternion(0.157626, 0.00834236, 0.125471, 0.97946)
bones/30/rotation = Quaternion(0.27587, 0.0139218, 0.171662, 0.945639)
bones/31/rotation = Quaternion(0.312317, 0.00392896, 0.125246, 0.941677)
bones/35/rotation = Quaternion(-0.0244435, -0.607186, 0.522652, 0.597965)
bones/36/rotation = Quaternion(0.229137, -0.016186, -0.236833, 0.944005)
bones/37/rotation = Quaternion(0.300171, -0.0022473, 0.0163609, 0.953742)
bones/38/rotation = Quaternion(0.157976, 0.0125537, -0.154355, 0.975223)
bones/39/rotation = Quaternion(0.516203, 0.517634, -0.128175, 0.670195)
bones/40/rotation = Quaternion(0.157626, -0.00834248, -0.125471, 0.97946)
bones/41/rotation = Quaternion(0.27587, -0.0139216, -0.171662, 0.945639)
bones/42/rotation = Quaternion(0.312317, -0.00392894, -0.125246, 0.941677)
bones/45/position = Vector3(0, 0.0879051, -0.0279832)
bones/49/rotation = Quaternion(-0.78609, 2.61199e-14, 2.05382e-14, 0.618112)
bones/50/position = Vector3(4.23516e-21, 0.0180319, -1.75822e-07)
bones/50/rotation = Quaternion(-0.325181, 2.28492e-15, 6.64486e-15, 0.945652)
bones/54/rotation = Quaternion(0.684876, -0.0939814, -0.249508, 0.678128)
bones/57/rotation = Quaternion(0.684876, 0.0939814, 0.249508, 0.678128)
bones/58/position = Vector3(-3.86349e-08, -0.0286635, 0.118898)
bones/59/position = Vector3(-6.19966e-08, 0.0131357, 7.77576e-08)
bones/59/rotation = Quaternion(-0.114116, -0.0550915, 0.207426, 0.970009)
bones/60/position = Vector3(3.86349e-08, -0.0286635, 0.118898)
bones/60/rotation = Quaternion(-0.596341, 0.400049, 0.463528, 0.519114)
bones/61/position = Vector3(1.25082e-08, 0.0131358, 4.80257e-08)
bones/61/rotation = Quaternion(-0.114116, 0.0550915, -0.207426, 0.970009)
bones/62/position = Vector3(8.59452e-09, -0.0379785, 0.118064)
bones/62/rotation = Quaternion(-0.566769, -0.417665, -0.413506, 0.577358)
bones/63/rotation = Quaternion(0.0250831, 0.00550765, 0.138876, 0.989977)
bones/64/position = Vector3(-8.59452e-09, -0.0379785, 0.118064)
bones/64/rotation = Quaternion(-0.566769, 0.417665, 0.413506, 0.577358)
bones/65/rotation = Quaternion(0.0250831, -0.00550765, -0.138876, 0.989977)
bones/66/rotation = Quaternion(-0.172049, 0.791424, 0.524873, 0.261831)
bones/67/rotation = Quaternion(0.00870812, -0.0389789, -0.0890473, 0.995226)
bones/68/rotation = Quaternion(-0.179551, -0.0526494, -0.218929, 0.957632)
bones/69/rotation = Quaternion(-0.250333, 0.0465416, -0.2193, 0.941846)
bones/70/rotation = Quaternion(0.712732, -0.051836, -0.696173, 0.0683269)
bones/71/position = Vector3(-5.15911e-08, 0.0195702, 2.32399e-09)
bones/71/rotation = Quaternion(-0.0584434, -0.0607394, -0.0814582, 0.993106)
bones/72/rotation = Quaternion(0.172049, 0.791424, 0.524873, -0.261831)
bones/73/rotation = Quaternion(0.00870811, 0.0389789, 0.0890473, 0.995226)
bones/74/rotation = Quaternion(-0.179551, 0.0526494, 0.218929, 0.957632)
bones/75/rotation = Quaternion(-0.250333, -0.0465416, 0.2193, 0.941846)
bones/76/rotation = Quaternion(0.712732, 0.051836, 0.696173, 0.0683268)
bones/77/position = Vector3(3.23363e-08, 0.0195699, 5.54122e-09)
bones/77/rotation = Quaternion(-0.0584434, 0.0607394, 0.0814582, 0.993106)
bones/86/position = Vector3(0.0248724, -0.0367494, 0.105565)
bones/87/position = Vector3(-1.37396e-08, 0.0389292, -1.01359e-07)
bones/87/rotation = Quaternion(-0.397767, -0.0499544, 0.0543533, 0.914512)
bones/89/position = Vector3(-3.57798e-08, 0.0389289, 8.16762e-08)
bones/91/position = Vector3(-7.31121e-08, 0.0400507, -4.7092e-08)
bones/91/rotation = Quaternion(0.574808, 0.0442383, -0.173396, 0.798482)
bones/92/rotation = Quaternion(0.352567, 0.314682, 0.871803, -0.128958)
bones/93/position = Vector3(-5.92611e-08, 0.0400506, 1.31662e-07)
bones/93/rotation = Quaternion(0.574808, -0.0442383, 0.173396, 0.798482)
bones/94/rotation = Quaternion(0.744643, 0.133891, 0.653642, -0.0182425)
bones/95/rotation = Quaternion(0.846794, 0.13963, 0.510552, -0.0527228)
bones/97/rotation = Quaternion(0.744643, -0.133891, -0.653642, -0.0182425)
bones/98/rotation = Quaternion(0.846794, -0.139631, -0.510552, -0.0527228)
bones/102/position = Vector3(-1.92836e-16, -0.018746, 0.124694)
bones/102/rotation = Quaternion(0.99987, -2.50585e-14, 4.04112e-16, 0.0161222)
bones/103/rotation = Quaternion(-0.121295, -0.0974205, 0.987801, -0.00677664)
bones/105/position = Vector3(0.0246329, 0.166218, 0.0349749)
bones/105/rotation = Quaternion(0.609284, 0.507757, 0.467299, -0.390625)
bones/106/position = Vector3(-1.36773e-08, 0.177257, -2.16096e-07)
bones/106/rotation = Quaternion(-0.413469, -0.0301304, -0.179323, 0.892177)
bones/107/position = Vector3(1.09017e-08, 0.177257, -1.32636e-07)
bones/107/rotation = Quaternion(-0.138364, 0.474286, -0.568392, 0.657905)
bones/108/rotation = Quaternion(8.98693e-08, 0.131166, 5.56113e-08, 0.99136)
bones/109/rotation = Quaternion(0.537578, 0.131077, 0.0167631, 0.832795)
bones/110/rotation = Quaternion(-2.31682e-08, -0.356468, 1.59651e-07, 0.934308)
bones/111/rotation = Quaternion(0.0408505, -0.355542, -0.157209, 0.920438)
bones/113/position = Vector3(0.00331841, 0.0719536, 0.00334034)
bones/113/rotation = Quaternion(0.251783, 0.030465, 0.00613046, 0.967285)
bones/114/rotation = Quaternion(0.249743, 0.226624, -0.0679011, 0.938967)
bones/115/rotation = Quaternion(0.219627, 0.00768286, 0.00677099, 0.97553)
bones/116/rotation = Quaternion(0.250739, 0.597975, 0.597028, 0.472349)
bones/117/rotation = Quaternion(0.138548, -0.429112, -0.138447, 0.881759)
bones/120/position = Vector3(0.000206154, 0.0818464, 0.00246205)
bones/120/rotation = Quaternion(0.454971, -0.00428581, -0.116992, 0.882777)
bones/121/rotation = Quaternion(0.213691, 0.0932084, 0.0114328, 0.972377)
bones/122/rotation = Quaternion(0.218534, 0.0160367, -0.0165556, 0.975557)
bones/124/position = Vector3(-0.00175377, 0.0759021, -0.000211009)
bones/124/rotation = Quaternion(0.436588, -0.0112357, -0.139099, 0.888772)
bones/125/rotation = Quaternion(0.206714, 0.0803829, 0.0277685, 0.974698)
bones/126/rotation = Quaternion(0.22578, -0.0103113, -0.0302463, 0.973654)
bones/128/position = Vector3(-0.00397393, 0.0690545, -0.00504344)
bones/128/rotation = Quaternion(0.32331, 0.0398338, 0.00175508, 0.945453)
bones/129/rotation = Quaternion(0.229803, 0.0480768, 0.0205414, 0.971832)
bones/130/rotation = Quaternion(0.176993, -0.0312002, -0.00887036, 0.983678)
bones/131/position = Vector3(-0.0246329, 0.166218, 0.0349749)
bones/131/rotation = Quaternion(0.609284, -0.507757, -0.467299, -0.390625)
bones/132/position = Vector3(1.165e-08, 0.177258, -2.34094e-07)
bones/132/rotation = Quaternion(-0.43153, -0.0106536, 0.101695, 0.896285)
bones/133/position = Vector3(4.88456e-09, 0.177258, -1.29314e-07)
bones/133/rotation = Quaternion(-0.279939, -0.534806, 0.478818, 0.637456)
bones/134/rotation = Quaternion(-1.29608e-08, -0.236982, -3.56867e-08, 0.971514)
bones/135/rotation = Quaternion(0.592737, -0.237001, -0.0897376, 0.764487)
bones/136/rotation = Quaternion(1.08787e-08, 0.0937609, -2.49246e-08, 0.995595)
bones/137/rotation = Quaternion(-0.0389333, 0.0926972, -0.232048, 0.967494)
bones/139/position = Vector3(-0.00358427, 0.0738904, -0.00634562)
bones/139/rotation = Quaternion(0.553375, -0.0179991, -0.254585, 0.792868)
bones/140/rotation = Quaternion(0.230292, 0.22121, -0.0462574, 0.946516)
bones/141/rotation = Quaternion(0.195474, -0.00751371, -0.00695866, 0.980656)
bones/142/position = Vector3(-8.52334e-09, 2.47482e-07, -1.70967e-07)
bones/142/rotation = Quaternion(0.24361, -0.633622, -0.519348, 0.519091)
bones/143/rotation = Quaternion(0.249462, -0.0831425, 0.215058, 0.940535)
bones/144/rotation = Quaternion(0.374945, -0.0902972, 0.0270827, 0.922241)
bones/146/rotation = Quaternion(-0.0157574, 0.143899, -0.579688, 0.801877)
bones/148/position = Vector3(-0.000295915, 0.0824022, 0.00347466)
bones/148/rotation = Quaternion(0.651198, 0.022708, 0.049658, 0.756941)
bones/149/rotation = Quaternion(0.413753, 0.00334351, -0.0356371, 0.909685)
bones/150/rotation = Quaternion(0.420604, -0.0121572, 0.0195825, 0.906952)
bones/152/position = Vector3(0.00110349, 0.0757071, 0.00450043)
bones/152/rotation = Quaternion(0.642206, 0.0364361, 0.132315, 0.754146)
bones/153/rotation = Quaternion(0.365935, -0.0376738, -0.0321699, 0.929321)
bones/154/rotation = Quaternion(0.385704, 0.0152328, 0.0280927, 0.922069)
bones/156/position = Vector3(0.00307062, 0.0668194, -0.00102625)
bones/156/rotation = Quaternion(0.62845, -0.0209155, 0.0762118, 0.773824)
bones/157/rotation = Quaternion(0.205367, -0.0320112, -0.0249894, 0.977842)
bones/158/rotation = Quaternion(0.152651, 0.0309711, 0.00963664, 0.987748)
bones/159/rotation = Quaternion(0.996899, 0.0434844, 0.00286167, -0.0655206)
bones/160/rotation = Quaternion(5.24085e-09, 2.48998e-08, -4.60205e-08, 1)
bones/161/rotation = Quaternion(0.996899, -0.0434844, -0.00286165, -0.0655206)
bones/162/rotation = Quaternion(-3.83946e-10, -2.51096e-08, 4.85816e-08, 1)
bones/165/rotation = Quaternion(0.996949, 0.0437426, 0.0028353, -0.0645848)
bones/166/position = Vector3(6.08266e-09, 0.245823, 5.00272e-08)
bones/166/rotation = Quaternion(7.3305e-08, -8.4316e-07, 1.7877e-08, 1)
bones/167/position = Vector3(2.26569e-08, 0.245824, 3.28362e-08)
bones/167/rotation = Quaternion(0.0531176, 0.00529869, -0.0117237, 0.998505)
bones/168/position = Vector3(5.30999e-08, 0.231631, 6.07238e-09)
bones/168/rotation = Quaternion(-6.11726e-08, 1.00431e-08, 3.69109e-08, 1)
bones/169/position = Vector3(1.17032e-08, 0.231631, 1.93872e-08)
bones/169/rotation = Quaternion(-0.539665, -0.039223, 0.0413491, 0.839948)
bones/170/position = Vector3(-9.26504e-09, 0.156054, -1.68594e-08)
bones/170/rotation = Quaternion(-0.0131879, 0.965858, -0.258721, -0.00275884)
bones/171/rotation = Quaternion(0.996949, -0.0437426, -0.0028353, -0.0645848)
bones/172/position = Vector3(-5.86437e-09, 0.245824, 6.67294e-08)
bones/172/rotation = Quaternion(6.45916e-08, 8.14478e-07, -2.27665e-08, 1)
bones/173/position = Vector3(-1.13953e-08, 0.245823, 3.75643e-08)
bones/173/rotation = Quaternion(0.0531176, -0.00529866, 0.0117237, 0.998505)
bones/174/position = Vector3(1.04774e-09, 0.231631, 2.84859e-09)
bones/174/rotation = Quaternion(-6.04273e-08, 5.01275e-09, -2.03945e-08, 1)
bones/175/position = Vector3(1.35008e-08, 0.23163, 4.49471e-09)
bones/175/rotation = Quaternion(-0.539665, 0.039223, -0.0413491, 0.839948)
bones/176/position = Vector3(-1.44022e-08, 0.156052, -2.6326e-08)
bones/176/rotation = Quaternion(0.0131879, 0.965858, -0.258721, 0.00275884)

[node name="racket" parent="AiPlayer/Model/h/player/game-rig/Skeleton3D" index="0"]
transform = Transform3D(-0.186207, -0.188294, 0.964299, -0.653854, 0.756316, 0.0214224, -0.733348, -0.626522, -0.263948, 0.03264, 1.45165, 0.506936)

[node name="AnimationTree" parent="AiPlayer/Model" index="5"]
parameters/move/blend_position = Vector2(0, 0)

[node name="Camera3D" parent="AiPlayer" index="3"]
top_level = false

[node name="TelevisionHUD" parent="." instance=ExtResource("4_upnw7")]
metadata/_edit_lock_ = true

[node name="Panel" parent="TelevisionHUD/MatchStatsPanel" index="0"]
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
offset_left = 0.0
offset_top = 0.0
offset_right = 500.0
offset_bottom = 300.0

[node name="Label" parent="TelevisionHUD/MatchStatsPanel/Panel" index="0"]
offset_left = 0.0
offset_top = 0.0
offset_right = 40.0
offset_bottom = 23.0

[node name="Label2" parent="TelevisionHUD/MatchStatsPanel/Panel" index="1"]
offset_left = 0.0
offset_top = 0.0
offset_right = 55.0
offset_bottom = 31.0

[node name="Label3" parent="TelevisionHUD/MatchStatsPanel/Panel" index="2"]
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
offset_left = 0.0
offset_top = 0.0
offset_right = 55.0
offset_bottom = 31.0

[node name="PlayerImage" parent="TelevisionHUD/MatchStatsPanel" index="1"]
offset_left = 0.0
offset_top = 0.0
offset_right = 200.0
offset_bottom = 200.0

[node name="PlayerImage2" parent="TelevisionHUD/MatchStatsPanel" index="2"]
offset_left = 0.0
offset_top = 0.0
offset_right = 200.0
offset_bottom = 200.0

[node name="AnimationPlayer" parent="TelevisionHUD/MatchStatsPanel" index="3"]
libraries = {
&"": SubResource("AnimationLibrary_wicjn")
}

[node name="Stadium" parent="." instance=ExtResource("6_4vere")]

[node name="Cameras" parent="." instance=ExtResource("7_6frth")]

[node name="MatchManager" parent="." node_paths=PackedStringArray("player0", "player1", "court", "stadium", "televisionHud", "umpire") groups=["Player"] instance=ExtResource("8_2s2ac")]
player0 = NodePath("../Player")
player1 = NodePath("../AiPlayer")
court = NodePath("../Stadium/Court")
stadium = NodePath("../Stadium")
televisionHud = NodePath("../TelevisionHUD")
umpire = NodePath("../Umpire")

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_xdr50")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(-0.441899, -0.894442, -0.0685425, -0.706239, 0.299768, 0.641377, -0.553129, 0.331832, -0.764157, 1.20894, 7.64477, -8.49079)
shadow_enabled = true

[node name="TrajectoryDrawer" parent="." instance=ExtResource("11_324nl")]
visible = false

[node name="CanvasLayer" parent="." instance=ExtResource("10_7cjfu")]

[node name="Umpire" parent="." instance=ExtResource("12_ard7f")]
transform = Transform3D(-4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, -7.18558, 0, 0)

[node name="MatchDebugHud" parent="." node_paths=PackedStringArray("match_manager") instance=ExtResource("11_7qdcc")]
match_manager = NodePath("../MatchManager")

[node name="PauseMenu" parent="." node_paths=PackedStringArray("root") instance=ExtResource("13_rcvjq")]
process_mode = 3
root = NodePath("..")
metadata/_edit_use_anchors_ = true

[node name="CrowdBlock" parent="." instance=ExtResource("14_o6v58")]
transform = Transform3D(-4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, 12.9272, 0.623559, -16.6489)

[editable path="Player"]
[editable path="Player/Model"]
[editable path="Player/Model/h/player"]
[editable path="AiPlayer"]
[editable path="AiPlayer/Model"]
[editable path="AiPlayer/Model/h/player"]
[editable path="TelevisionHUD"]
[editable path="TelevisionHUD/ScoreDisplay"]
[editable path="TelevisionHUD/ScoreDisplay/VBoxContainer/Player1ScorePanel"]
[editable path="Stadium"]
[editable path="Stadium/stadium"]
[editable path="Cameras"]
[editable path="Cameras/Stadium"]
[editable path="Cameras/Stadium/stadium"]
[editable path="MatchManager"]
